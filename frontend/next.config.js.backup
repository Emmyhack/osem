/** @type {import('next').NextConfig} */
const nextConfig = {
  // Enable SWC minification for faster builds
  swcMinify: true,
  
  // Enable experimental features for better performance
  experimental: {
    // Enable Turbopack for faster dev builds (if available)
    turbo: {
      rules: {
        '*.svg': {
          loaders: ['@svgr/webpack'],
          as: '*.js',
        },
      },
    },
    // Optimize package imports
    optimizePackageImports: ['@solana/web3.js', 'lucide-react'],
  },
  
  // Optimize webpack configuration
  webpack: (config, { dev, isServer }) => {
    // Solana fallbacks
    config.resolve.fallback = {
      fs: false,
      net: false,
      tls: false,
    };
    
    // Development optimizations
    if (dev) {
      // Enable webpack cache
      config.cache = {
        type: 'filesystem',
        buildDependencies: {
          config: [__filename],
        },
      };
      
      // Optimize module resolution
      config.resolve.alias = {
        ...config.resolve.alias,
        '@': require('path').resolve(__dirname, 'src'),
      };
    }
    
    // Production optimizations
    if (!dev) {
      config.optimization = {
        ...config.optimization,
        splitChunks: {
          chunks: 'all',
          cacheGroups: {
            solana: {
              test: /[\\/]node_modules[\\/](@solana|@coral-xyz)[\\/]/,
              name: 'solana',
              priority: 10,
              reuseExistingChunk: true,
            },
          },
        },
      };
    }
    
    return config;
  },
  
  // Environment variables
  env: {
    NEXT_PUBLIC_SOLANA_NETWORK: process.env.NEXT_PUBLIC_SOLANA_NETWORK || 'devnet',
    NEXT_PUBLIC_RPC_ENDPOINT: process.env.NEXT_PUBLIC_RPC_ENDPOINT || 'https://api.devnet.solana.com',
  },
  
  // Optimize images
  images: {
    domains: [],
    formats: ['image/webp', 'image/avif'],
  },
  
  // Enable compiler optimizations (only for non-turbo builds)
  ...(process.env.TURBOPACK ? {} : {
    compiler: {
      // Remove console.log in production
      removeConsole: process.env.NODE_ENV === 'production',
    },
  }),
  
  // Output optimization
  output: 'standalone',
}

module.exports = nextConfig